"use strict";var precacheConfig=[["/index.html","cf5728dd174bfe71f523c0cbb370e479"],["/static/css/main.b5ef4f51.css","d74a062e042a3a14dbaf742f1718629b"],["/static/js/main.cc7f06b9.js","9ef31d3bd2be6f43074c0e42587f6771"],["/static/media/Advanced settings.76874558.gif","76874558d1a5c83c69db874c0a54926f"],["/static/media/Burger1.217a64e2.png","217a64e2d26d2cba5d57bc67b16204f5"],["/static/media/Receive mails.9d72c3a4.jpg","9d72c3a460fd1766c15fc1ee2ad4ffe8"],["/static/media/Screen1.4bbca6b0.png","4bbca6b07f1eec86f8badd6aa5205635"],["/static/media/Sign In animation.4f79c878.gif","4f79c8780eb1b70e0524bf17cf7f573f"],["/static/media/burger2.4049ef75.png","4049ef757566000e43a5f307bce65416"],["/static/media/employee.1d717ac9.gif","1d717ac91db6aba8be5648a029c4d340"],["/static/media/home.4ad5da77.jpg","4ad5da776438cb6550babc0c90955104"],["/static/media/index.c557c86e.jpeg","c557c86e6ff2d0a689d3cd69b07fb391"],["/static/media/login.cab82830.png","cab828309b34371b4ec5d1cfd5abb0e2"],["/static/media/me.d540df0e.jpg","d540df0e8db58548c56d8892dbededbe"],["/static/media/musicx1.6e213df0.png","6e213df0883bff3909b1def7c90a78b6"],["/static/media/musicx2.ac7c2608.png","ac7c260841e0ab8e2887a2b137969f33"],["/static/media/notification.8448a79f.gif","8448a79fbaf93c61e4e4b7f4e38ebda6"],["/static/media/search.1757d5cc.jpg","1757d5cc582739750212b669ff2731f5"],["/static/media/send.fc4afa82.jpg","fc4afa823b80bc7792b9dabfe4825800"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});